#!/usr/bin/env python3
"""module"""


import tensorflow.keras as K


def train_model(network, data, labels, batch_size,
                lepath=None,
ffle=False):
        """function"""
            callbacks = []
                if early_stopping and validation_data is not None:
                            early_stop = K.callbacks.EarlyStopping(monitor="val_loss",
                                       patience=patience)
                                    callbacks.append(early_stop)
                                        if learning_rate_decay and validation_data is not None:
                                                    def step_decay(epoch):
                                                                    return alpha / (1 + decay_rate * epoch)
                                                                        learning_rate = K.callbacks.LearningRateScheduler(
                                                                            step_decay, verbose=1)
                                                                                callbacks.append(learning_rate)
